name: Deploy

on:
  push:
    # for the develop branch only.
    branches:
      - main

jobs:
  semantic-release:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    name: Semantic Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      new_release_version: ${{ steps.tag.outputs.new_release_version }}
      previous_release_version: ${{ steps.previous_tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Save Previous Tag
        id: previous_tag
        uses: 'WyriHaximus/github-action-get-previous-tag@v1'

      - name: Prepare prerelease semantic
        if: github.ref != 'refs/heads/main'
        run: mv .releaserc.prerelease.yaml .releaserc.yaml

      - name: Semantic Release
        if: github.event.head_commit.message != 'chore-${{ steps.previous_tag.outputs.tag }}'
        uses: cycjimmy/semantic-release-action@v2
        id: semantic
        with:
          semantic_version: 17
          extra_plugins: |
            @semantic-release/changelog@5
            @semantic-release/exec@5
            @semantic-release/git@9
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Store New Tag
        if: steps.semantic.outputs.new_release_published == 'true'
        id: tag
        run: |
          echo 'new_release_version=${{steps.semantic.outputs.new_release_version}}' >> $GITHUB_OUTPUT

  update-versions:
    needs: [semantic-release]
    name: Update Version Files
    runs-on: ubuntu-latest
    if: github.event.head_commit.message != 'chore-${{ needs.semantic-release.outputs.previous_release_version }}'
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: output
        run: |
          echo '${{toJSON(needs.semantic-release.outputs.new_release_version)}}'

      - name: Create branch
        run: |
          git checkout -b chore-${{ needs.semantic-release.outputs.previous_release_version }}

      - name: Update client file versions
        uses: jaywcjlove/github-action-package@main
        with:
          path: client/package.json
          data: |
            {
              "version": "${{ needs.semantic.outputs.new_release_version }}"
            }
      - name: Update client file versions
        uses: jaywcjlove/github-action-package@main
        with:
          path: server/package.json
          data: |
            {
              "version": "${{ needs.semantic.outputs.new_release_version }}"
            }

      - name: Update Image Version in the related HelmChart values.yaml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'chart/Chart.yaml'
          propertyPath: 'appVersion'
          value: '${{ needs.semantic-release.outputs.new_release_version }}'
          masterBranchName: main
          targetBranch: main
          branch: chore-${{ needs.semantic-release.outputs.previous_tag }}
          message: 'chore-${{ needs.semantic-release.outputs.previous_tag }}'

      - name: Update Image Version in the related HelmChart values.yaml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'chart/Chart.yaml'
          propertyPath: 'version'
          value: '${{ needs.semantic-release.outputs.new_release_version }}'
          masterBranchName: main
          targetBranch: main
          branch: chore-${{ needs.semantic-release.outputs.new_release_version }}
          message: 'chore-${{ needs.semantic-release.outputs.new_release_version }}'

      - name: Commit files
        if: github.event.head_commit.message != 'version update'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git config pull.rebase true
          git add .
          git commit -m 'chore-${{ needs.semantic-release.outputs.new_release_version }}'
          git pull origin 'chore-${{ needs.semantic-release.outputs.new_release_version }}'
          git add .

      - name: Push changes
        if: github.event.head_commit.message != 'chore-${{ needs.semantic-release.outputs.new_release_version }}'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT }}
          branch: 'chore-${{ needs.semantic-release.outputs.new_release_version }}'

      - name: Create PR
        id: pr
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        run: |
          echo "gh api \
          --method POST \
          -H 'Accept: application/vnd.github+json' \
          -H 'X-GitHub-Api-Version: 2022-11-28' \
          /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/pulls \
          -f 'title=chore-${{ needs.semantic-release.outputs.new_release_version }}' -f 'body=chore-${{ needs.semantic-release.outputs.new_release_version }}' -f 'head=chore-${{ needs.semantic-release.outputs.new_release_version }}\' -f 'base=main'" >> $GITHUB_OUTPUT

      - name: Merge PR
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        run: |
          echo ${{ toJSON(steps.pr.outputs) }}
          gh api \
          --method PUT \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/pulls/${{ steps.pr.outputs.number }}/merge \
          -f 'commit_title=chore-${{ needs.semantic-release.outputs.new_release_version }}' -f 'commit_message=chore-${{ needs.semantic-release.outputs.new_release_version }}'
