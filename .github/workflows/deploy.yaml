name: Deploy
on:
  push:
    branches:
      - main

jobs:
  versioning:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Pull Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Prepare prerelease semantic
        if: github.ref != 'refs/heads/main'
        run: mv .releaserc.prerelease.yaml .releaserc.yaml

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        id: semantic
        with:
          semantic_version: 17
          extra_plugins: |
            @semantic-release/changelog@5
            @semantic-release/exec@5
            @semantic-release/git@9
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Do something when a new release published
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo ${{ steps.semantic.outputs.new_release_version }}
          echo ${{ steps.semantic.outputs.new_release_major_version }}
          echo ${{ steps.semantic.outputs.new_release_minor_version }}
          echo ${{ steps.semantic.outputs.new_release_patch_version }}

      - name: Update Client package.json version
        run: |
          cd client
          mv package.json
          jq -r '.version |= ${{ steps.semantic.outputs.new_release_version }}'
          rm temp.json

      - name: Update Server package.json version
        run: |
          cd server
          mv package.json
          jq -r '.version |= ${{ steps.semantic.outputs.new_release_version }}'
          rm temp.json
  build:
    runs-on: ubuntu-latest
    needs: versioning
    steps:
      - name: Echo
        run: echo "Build Step"
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Echo
        run: echo "Deploy Step"
