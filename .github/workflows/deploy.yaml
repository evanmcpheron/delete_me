name: Deploy

on:
  push:
    # for the develop branch only.
    branches:
      - main

jobs:
  semantic-release:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    name: Semantic Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Prepare prerelease semantic
        if: github.ref != 'refs/heads/main'
        run: mv .releaserc.prerelease.yaml .releaserc.yaml

      - name: Semantic Release
        if: github.event.head_commit.message != 'version update'
        uses: cycjimmy/semantic-release-action@v2
        id: semantic # Need an `id` for output variables
        with:
          semantic_version: 17
          extra_plugins: |
            @semantic-release/changelog@5
            @semantic-release/exec@5
            @semantic-release/git@9
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Do something when a new release published
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo ${{ steps.semantic.outputs.new_release_version }}
          echo ${{ steps.semantic.outputs.new_release_major_version }}
          echo ${{ steps.semantic.outputs.new_release_minor_version }}
          echo ${{ steps.semantic.outputs.new_release_patch_version }}

      - name: Update client file versions
        id: info
        uses: jaywcjlove/github-action-package@main
        with:
          path: client/package.json
          data: |
            {
              "version": "${{ steps.semantic.outputs.new_release_version }}"
            }
      - name: Update client file versions
        id: info2
        uses: jaywcjlove/github-action-package@main
        with:
          path: server/package.json
          data: |
            {
              "version": "${{ steps.semantic.outputs.new_release_version }}"
            }
      - name: Commit files
        if: github.event.head_commit.message != 'version update'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git pull
          git commit -a -m 'version update'
      - name: Push changes
        if: github.event.head_commit.message != 'version update'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT }}
          branch: main
  docker:
    name: Docker Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: 'call action'
        id: last_release
        uses: InsonusK/get-latest-release@v1.0.1
        with:
          myToken: ${{ github.token }}
          exclude_types: 'release'
          view_top: 1
      - name: 'Print result'
        run: |
          echo "id: ${{ steps.last_release.outputs.id }}"
          echo "name: ${{ steps.last_release.outputs.name }}"
          echo "tag_name: ${{ steps.last_release.outputs.tag_name }}"
          echo "created_at: ${{ steps.last_release.outputs.created_at }}"
          echo "draft: ${{ steps.last_release.outputs.draft }}"
          echo "prerelease: ${{ steps.last_release.outputs.prerelease }}"
          echo "url: ${{ steps.last_release.outputs.url }}"
          echo "html_url: ${{ steps.last_release.outputs.html_url }}"
