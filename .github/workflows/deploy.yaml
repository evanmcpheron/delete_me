name: Deploy

on:
  push:
    # for the develop branch only.
    branches:
      - main

jobs:
  semantic-release:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    name: Semantic Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Prepare prerelease semantic
        if: github.ref != 'refs/heads/main'
        run: mv .releaserc.prerelease.yaml .releaserc.yaml

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        id: semantic # Need an `id` for output variables
        with:
          semantic_version: 17
          extra_plugins: |
            @semantic-release/changelog@5
            @semantic-release/exec@5
            @semantic-release/git@9
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Do something when a new release published
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo ${{ steps.semantic.outputs.new_release_version }}
          echo ${{ steps.semantic.outputs.new_release_major_version }}
          echo ${{ steps.semantic.outputs.new_release_minor_version }}
          echo ${{ steps.semantic.outputs.new_release_patch_version }}

      - name: Update file versions
        id: info
        uses: jaywcjlove/github-action-package@main
        with:
          path: client/package.json
          data: |
            {
              "version": "${{ steps.semantic.outputs.new_release_version }}"
            }
      - name: Merge changes
        run: |
          git config --global user.name "Evan McPheron"
          git config --global user.email "evan.mcpheron@icloud.com"
          git add .
          git commit -m 'version ${{ steps.semantic.outputs.new_release_version }}'
          echo ${{ github.actor }}
